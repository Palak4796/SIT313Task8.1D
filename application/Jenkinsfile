pipeline {
    agent any  // Ensure the build runs on your new agent

    environment {
        GIT_REPO_URL = 'https://github.com/Palak4796/SIT313Task8.1D.git'
        REPO_DIR = 'SIT313Task8.1D'
        FRONTEND_DIR = 'application'  // Update if your directory name is different
    }

    stages {
        stage('Checkout SCM') {
            steps {
                script {
                    if (fileExists(REPO_DIR)) {
                        echo "Repository already exists. Pulling latest changes..."
                        dir(REPO_DIR) {
                            bat 'git pull origin main'
                        }
                    } else {
                        echo "Cloning repository..."
                        bat "git clone ${GIT_REPO_URL}"
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    echo "Installing dependencies..."
                    dir("${REPO_DIR}/${FRONTEND_DIR}") {
                        bat 'npm install'
                    }
                }
            }
        }

        stage('Build React App') {
            steps {
                script {
                    echo "Building React app..."
                    dir("${REPO_DIR}/${FRONTEND_DIR}") {
                        bat 'npm run build'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    def testCount = bat(script: 'powershell -command "& { (Get-ChildItem -Path src -Recurse -Include *.test.js, *.spec.js).Count }"', returnStdout: true).trim()
                    
                    if (testCount == '0') {
                        echo "No test files found, skipping tests."
                    } else {
                        dir("${REPO_DIR}/${FRONTEND_DIR}") {
                            bat 'npm run test -- --watchAll=false'
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "Deploying application..."
                    // Add deployment commands here
                }
            }
        }
    }

    post {
        failure {
            echo 'Build failed!'
        }
    }
}
